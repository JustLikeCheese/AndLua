---
--- Generated by AndLua(https://github.com/JustLikeCheese/AndLua)
--- Created by Cheese
--- DateTime: 2025/7/6 23:57
---

require "import"
import "java.io.File"

local ProgramAPI = import "lua/api/ProgramAPI"

local M = {}
M.PROJECT_DIRECTORY = ProgramAPI.getWorkDirectory("project")

-- 获取项目文件夹
-- @param fileName 可以为空
-- @return 返回 File 类型的项目文件夹
M.getProjectDirectory=function(fileName)
  -- 文件名为空, 返回 project 文件夹
  local dir = M.PROJECT_DIRECTORY
  if fileName == nil then
    return dir
  end
  -- 文件名不为空, 返回 project 下的文件夹
  return File(dir, fileName)
end

-- 获取项目的属性表
-- @param file 项目文件夹
-- @return table 返回 table 类型的属性表
M.getProjectInfo=function(dir)
  local file = File(dir, "init.lua")
  local path = tostring(file)
  if file.exists() then
    local env = {}, chunk, err, ok
    chunk, err = loadfile(tostring(file), "bt", env)
    if not chunk then return nil, "Load error: "..err end
    ok, err = pcall(chunk)
    if not ok then return nil, "Runtime error: "..err end
    return env
  end
  return nil, "IO Error: Can not found file `" .. path .. "`"
end

-- 获取项目的属性表（带校验
-- @param file 项目文件夹
-- @return table 返回 table 类型的属性表
M.getProjectInfoWithCheck=function(dir)
  local env = M.getProjectInfo(dir)
  local NECESSARY_KEYWORD = {
    appname = nil,
    packagename = nil,
  }
  for necessary_k,default_v in ipairs(NECESSARY_KEYWORD) do
    if env[necessary_k] == nil then
      if default_v ~= nil then
        env[necessary_k] = default_v
       else
        return nil, "Load error: Configuration file has no `" .. key .. "`" .. " attribute"
      end
    end
  end
  return env
end

-- 判断是否为项目文件夹
-- @param file 输入的文件
-- @return boolean 返回布尔值
M.isProject=function(file)
  if M.getProjectInfoWithCheck(file) ~= nil then
    return true
  end
  return false
end

-- 获取项目列表
-- @return table, table 返回 File 类型的文件列表以及配置列表
M.getProjectWithConfigs=function()
  local dir = M.PROJECT_DIRECTORY
  local dirs, infos, info = {}, {}
  dir.listFiles({
    accept = function(file)
      info = M.getProjectInfoWithCheck(file)
      if info ~= nil then
        table.insert(dirs, file)
        table.insert(infos, info)
      end
    end
  })
  return dirs, infos
end


return M